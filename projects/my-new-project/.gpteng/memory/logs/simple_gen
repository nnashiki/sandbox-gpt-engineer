[{"type": "system", "data": {"content": "You will get instructions for code to write.\nYou will write a very long answer. Make sure that every detail of the architecture is, in the end, implemented as code.\nThink step by step and reason yourself to the correct decisions to make sure we get it right.\nFirst lay out the names of the core classes, functions, methods that will be necessary, As well as a quick comment on their purpose.\n\nYou will output the content of each file necessary to achieve the goal, including ALL code.\nRepresent files like so:\n\nFILENAME\n```\nCODE\n```\n\nThe following tokens must be replaced like so:\nFILENAME is the lowercase combined path and file name including the file extension\nCODE is the code in the file\n\nExample representation of a file:\n\nsrc/hello_world.py\n```\nprint(\"Hello World\")\n```\n\nDo not comment on what every file does. Please note that the code should be fully functional. No placeholders.\n\n\nYou will start with the \"entrypoint\" file, then go to the ones that are imported by that file, and so on.\nPlease note that the code should be fully functional. No placeholders.\n\nFollow a language and framework appropriate best practice file naming convention.\nMake sure that files contain all imports, types etc.  The code should be fully functional. Make sure that code in different files are compatible with each other.\nEnsure to implement all code, if you are unsure, write a plausible implementation.\nInclude module dependency or package manager dependency definition file.\nBefore you finish, double check that all parts of the architecture is present in the files.\n\nWhen you are done, write finish with \"this concludes a fully working implementation\".\n\nUseful to know:\nAlmost always put different classes in different files.\nAlways use the programming language the user asks for.\nFor Python, you always create an appropriate requirements.txt file.\nFor NodeJS, you always create an appropriate package.json file.\nAlways add a comment briefly describing the purpose of the function definition.\nAdd comments explaining very complex bits of logic.\nAlways follow the best practices for the requested languages for folder/file structure and how to package the project.\n\n\nPython toolbelt preferences:\n- pytest\n- dataclasses\n", "additional_kwargs": {}}}, {"type": "human", "data": {"content": "PDF file viewer \u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4ed5\u69d8\n## \u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u753b\u9762\n- \u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3068\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u3001sqlite\u306b\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\u3068\u3057\u3066\u4fdd\u5b58\u3092\u3059\u308b\u3002\n\n## \u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\u753b\u9762\n- \u753b\u9762\u306e\u5de6\u5074\u306b\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\u3092\u8868\u793a\u3059\u308b\u3002\n- \u30d5\u30a1\u30a4\u30eb\u540d\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u30da\u30fc\u30b8\u306e\u53f3\u5074\u306bPDF.js\u3092\u4f7f\u3063\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u8868\u793a\u3059\u308b\u3002\n\n# \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u69cb\u6210\n- \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306fFastAPI\u3092\u5229\u7528\u3059\u308b\u3002\n- api \u30d5\u30a9\u30eb\u30c0\u30fc\u4ee5\u4e0b\u306b\u3001api\u306e\u5b9f\u88c5\u3092\u3059\u308b\u3002\n- __init__.py \u306b\u306f \"# This is __init__.py\" \u3068\u30b3\u30e1\u30f3\u30c8\u3092\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\n- API \u8d77\u52d5\u6642\u306b\u3001sqlite\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\n- cors \u3067\u5168\u3066\u3092\u8a31\u53ef\u3059\u308b\n\n```\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],  # \u3059\u3079\u3066\u306e\u30aa\u30ea\u30b8\u30f3\u3092\u8a31\u53ef\n    allow_credentials=True,\n    allow_methods=[\"*\"],  # \u3059\u3079\u3066\u306e HTTP \u30e1\u30bd\u30c3\u30c9\u3092\u8a31\u53ef\n    allow_headers=[\"*\"],  # \u3059\u3079\u3066\u306e\u30d8\u30c3\u30c0\u30fc\u3092\u8a31\u53ef\n)\n```\n\n# \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u69cb\u6210\n- \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306fReact(Typescript)\u3068pdf.js\u3092\u5229\u7528\u3059\u308b\u3002\n- React\u306e\u30a2\u30d7\u30ea\u306fcreate-react-app (npx create-react-app <app-name-here> --template typescript)\u3092\u5229\u7528\u3057\u3066\u4f5c\u6210\u3059\u308b\u3002\n- gui \u30d5\u30a9\u30eb\u30c0\u30fc\u4ee5\u4e0b\u306b\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e\u5b9f\u88c5\u3092\u3059\u308b\u3002\n- npx create-react-app \u3092\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 public\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 favicon.ico\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.html\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 logo192.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 logo512.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 manifest.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 robots.txt\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 App.css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 App.test.tsx\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 App.tsx\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.tsx\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 logo.svg\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 react-app-env.d.ts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 reportWebVitals.ts\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 setupTests.ts\n\u2514\u2500\u2500 tsconfig.json\n```\n", "additional_kwargs": {}, "example": false}}, {"type": "ai", "data": {"content": "\u307e\u305a\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306eFastAPI\u306e\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3059\u3002\n\n## \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u5b9f\u88c5\n\n### \u30d5\u30a1\u30a4\u30eb\u69cb\u6210\n```\n.\n\u251c\u2500\u2500 api\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 database.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 main.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 models.py\n\u2514\u2500\u2500 requirements.txt\n```\n\n### requirements.txt\nFastAPI\u3068\u305d\u306e\u4ed6\u306e\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u305f\u3081\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\nrequirements.txt\n```\nfastapi\nuvicorn\nsqlalchemy\npython-multipart\n```\n\n### api/__init__.py\nPython\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u8a8d\u8b58\u3055\u305b\u308b\u305f\u3081\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\napi/__init__.py\n```\n# This is __init__.py\n```\n\n### api/database.py\nSQLite\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u306e\u63a5\u7d9a\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\napi/database.py\n```python\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nSQLALCHEMY_DATABASE_URL = \"sqlite:///./test.db\"\n\nengine = create_engine(\n    SQLALCHEMY_DATABASE_URL, connect_args={\"check_same_thread\": False}\n)\nSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n\nBase = declarative_base()\n```\n\n### api/models.py\nSQLite\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\napi/models.py\n```python\nfrom sqlalchemy import Column, Integer, String\nfrom .database import Base\n\nclass File(Base):\n    __tablename__ = \"files\"\n\n    id = Column(Integer, primary_key=True, index=True)\n    filename = Column(String, unique=True, index=True)\n    file_path = Column(String)\n```\n\n### api/main.py\nFastAPI\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\napi/main.py\n```python\nfrom fastapi import FastAPI, UploadFile, File, HTTPException\nfrom fastapi.middleware.cors import CORSMiddleware\nfrom sqlalchemy.orm import Session\nfrom . import models, database\nfrom typing import List\n\napp = FastAPI()\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],  # \u3059\u3079\u3066\u306e\u30aa\u30ea\u30b8\u30f3\u3092\u8a31\u53ef\n    allow_credentials=True,\n    allow_methods=[\"*\"],  # \u3059\u3079\u3066\u306e HTTP \u30e1\u30bd\u30c3\u30c9\u3092\u8a31\u53ef\n    allow_headers=[\"*\"],  # \u3059\u3079\u3066\u306e\u30d8\u30c3\u30c0\u30fc\u3092\u8a31\u53ef\n)\n\nmodels.Base.metadata.create_all(bind=database.engine)\n\n@app.post(\"/uploadfile/\")\nasync def create_upload_file(file: UploadFile = File(...)):\n    try:\n        file_location = f\"files/{file.filename}\"\n        with open(file_location, \"wb+\") as file_object:\n            file_object.write(file.file.read())\n        db = Session(bind=database.engine)\n        db_file = models.File(filename=file.filename, file_path=file_location)\n        db.add(db_file)\n        db.commit()\n        db.refresh(db_file)\n        return {\"filename\": file.filename, \"file_path\": file_location}\n    except Exception as e:\n        raise HTTPException(status_code=400, detail=\"File not uploaded\")\n\n@app.get(\"/files/\", response_model=List[models.File])\ndef read_files(skip: int = 0, limit: int = 100, db: Session = Depends(database.get_db)):\n    files = db.query(models.File).offset(skip).limit(limit).all()\n    return files\n```\n\n\u6b21\u306b\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306eReact\u3068pdf.js\u306e\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3059\u3002\n\n## \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e\u5b9f\u88c5\n\n### \u30d5\u30a1\u30a4\u30eb\u69cb\u6210\n```\n.\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 public\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 favicon.ico\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.html\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 logo192.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 logo512.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 manifest.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 robots.txt\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 App.css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 App.test.tsx\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 App.tsx\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.tsx\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 logo.svg\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 react-app-env.d.ts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 reportWebVitals.ts\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 setupTests.ts\n\u2514\u2500\u2500 tsconfig.json\n```\n\n### package.json\nReact\u3068\u305d\u306e\u4ed6\u306e\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u305f\u3081\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\npackage.json\n```json\n{\n  \"name\": \"pdf-viewer\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@testing-library/jest-dom\": \"^5.11.4\",\n    \"@testing-library/react\": \"^11.1.0\",\n    \"@testing-library/user-event\": \"^12.1.10\",\n    \"@types/jest\": \"^26.0.15\",\n    \"@types/node\": \"^12.0.0\",\n    \"@types/react\": \"^17.0.0\",\n    \"@types/react-dom\": \"^17.0.0\",\n    \"axios\": \"^0.21.1\",\n    \"pdfjs-dist\": \"^2.6.347\",\n    \"react\": \"^17.0.2\",\n    \"react-dom\": \"^17.0.2\",\n    \"react-scripts\": \"4.0.3\",\n    \"typescript\": \"^4.1.2\",\n    \"web-vitals\": \"^1.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"react-app\",\n      \"react-app/jest\"\n    ]\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  }\n}\n```\n\n### src/App.tsx\nReact\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\nsrc/App.tsx\n```tsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\n\nfunction App() {\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/files/')\n      .then(response => {\n        setFiles(response.data);\n      });\n  }, []);\n\n  const onFileSelect = (file) => {\n    setSelectedFile(file.file_path);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"file-list\">\n        {files.map((file, index) => (\n          <div key={index} onClick={() => onFileSelect(file)}>\n            {file.filename}\n          </div>\n        ))}\n      </div>\n      <div className=\"file-viewer\">\n        {selectedFile && (\n          <Document\n            file={selectedFile}\n            onLoadSuccess={onDocumentLoadSuccess}\n          >\n            <Page pageNumber={pageNumber} />\n          </Document>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n```\n\n\u4ee5\u4e0a\u3067\u5168\u3066\u306e\u5b9f\u88c5\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u3067PDF\u30d5\u30a1\u30a4\u30eb\u30d3\u30e5\u30fc\u30a2\u306e\u30d5\u30eb\u30b9\u30bf\u30c3\u30af\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u5b8c\u6210\u3057\u307e\u3057\u305f\u3002", "additional_kwargs": {}, "example": false}}]